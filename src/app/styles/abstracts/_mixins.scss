// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}
@mixin size($width:auto, $height:auto)
{
  width: $width;
  height: $height;
}
@mixin square($size)
{
  @include size($size, $size);
}
@mixin border-top-radius($radius)
{
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}
@mixin border-right-radius($radius)
{
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}
@mixin border-bottom-radius($radius)
{
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}
@mixin border-left-radius($radius)
{
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}


// Vendor Prefixes

@mixin vendor($prop, $vals) {
  -webkit-#{$prop}: $vals;
  -moz-#{$prop}: $vals;
  -ms-#{prop}: $vals;
  -o-#{$prop}: $vals;
  #{$prop}: $vals;
}

@mixin animation($animation) {
  @include vendor('animation', $animation);
}

@mixin box-sizing($boxmodel) {
  @include vendor('box-sizing', $boxmodel);
}

@mixin rotate($degrees) {
  @include vendor('transform', rotate($degrees));
}

@mixin transform($transform) {
  @include vendor('transform', $ransform);
}

@mixin transition($transition: all .3s ease) {
  @include vendor('transition', $transition);
}

@mixin Select-spinner($size, $orbit, $satellite) {
  @include animation( Select-animation-spin 400ms infinite linear );
  @include square($size);
  box-sizing: border-box;
  border-radius: 50%;
  border: floor(($size / 8)) solid $orbit;
  border-right-color: $satellite;
  display: inline-block;
  position: relative;

}

@keyframes Select-animation-spin {
  to { transform: rotate(1turn); }
}
@-webkit-keyframes Select-animation-spin {
  to { -webkit-transform: rotate(1turn); }
}
/// Media Queries
///
/// Allows you to use inline media queries. Includes options for `$fix-mqs`.
///
/// $breakpoint - Desired breakpoint. Can be variable or unit.
/// $query - Defaults to `min-width`.
/// $type - Defaults to `screen`.

@mixin mq($breakpoint, $query: 'min-width', $type: 'screen') {

    @media #{$type} and (#{$query}: #{$breakpoint}) { @content; }
}
@mixin max-screen($max) {
  @include mq($max-width: $max) {
    @content;
  }
}
